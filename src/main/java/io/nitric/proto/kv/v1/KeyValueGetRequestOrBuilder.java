// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kv/v1/kv.proto

package io.nitric.proto.kv.v1;

public interface KeyValueGetRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:nitric.kv.v1.KeyValueGetRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The collection to retrieve the keyValue from
   * </pre>
   *
   * <code>string collection = 1;</code>
   * @return The collection.
   */
  java.lang.String getCollection();
  /**
   * <pre>
   * The collection to retrieve the keyValue from
   * </pre>
   *
   * <code>string collection = 1;</code>
   * @return The bytes for collection.
   */
  com.google.protobuf.ByteString
      getCollectionBytes();

  /**
   * <pre>
   * The unique key of the keyValue to retrieve
   * </pre>
   *
   * <code>map&lt;string, .nitric.kv.v1.Key&gt; key = 2;</code>
   */
  int getKeyCount();
  /**
   * <pre>
   * The unique key of the keyValue to retrieve
   * </pre>
   *
   * <code>map&lt;string, .nitric.kv.v1.Key&gt; key = 2;</code>
   */
  boolean containsKey(
      java.lang.String key);
  /**
   * Use {@link #getKeyMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.nitric.proto.kv.v1.Key>
  getKey();
  /**
   * <pre>
   * The unique key of the keyValue to retrieve
   * </pre>
   *
   * <code>map&lt;string, .nitric.kv.v1.Key&gt; key = 2;</code>
   */
  java.util.Map<java.lang.String, io.nitric.proto.kv.v1.Key>
  getKeyMap();
  /**
   * <pre>
   * The unique key of the keyValue to retrieve
   * </pre>
   *
   * <code>map&lt;string, .nitric.kv.v1.Key&gt; key = 2;</code>
   */

  io.nitric.proto.kv.v1.Key getKeyOrDefault(
      java.lang.String key,
      io.nitric.proto.kv.v1.Key defaultValue);
  /**
   * <pre>
   * The unique key of the keyValue to retrieve
   * </pre>
   *
   * <code>map&lt;string, .nitric.kv.v1.Key&gt; key = 2;</code>
   */

  io.nitric.proto.kv.v1.Key getKeyOrThrow(
      java.lang.String key);
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: document/v1/document.proto

package io.nitric.proto.document.v1;

/**
 * Protobuf type {@code nitric.document.v1.DocumentQueryStreamRequest}
 */
public final class DocumentQueryStreamRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:nitric.document.v1.DocumentQueryStreamRequest)
    DocumentQueryStreamRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DocumentQueryStreamRequest.newBuilder() to construct.
  private DocumentQueryStreamRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DocumentQueryStreamRequest() {
    expressions_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DocumentQueryStreamRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DocumentQueryStreamRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.nitric.proto.document.v1.Collection.Builder subBuilder = null;
            if (collection_ != null) {
              subBuilder = collection_.toBuilder();
            }
            collection_ = input.readMessage(io.nitric.proto.document.v1.Collection.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(collection_);
              collection_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              expressions_ = new java.util.ArrayList<io.nitric.proto.document.v1.Expression>();
              mutable_bitField0_ |= 0x00000001;
            }
            expressions_.add(
                input.readMessage(io.nitric.proto.document.v1.Expression.parser(), extensionRegistry));
            break;
          }
          case 32: {

            limit_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        expressions_ = java.util.Collections.unmodifiableList(expressions_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.nitric.proto.document.v1.Documents.internal_static_nitric_document_v1_DocumentQueryStreamRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.nitric.proto.document.v1.Documents.internal_static_nitric_document_v1_DocumentQueryStreamRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.nitric.proto.document.v1.DocumentQueryStreamRequest.class, io.nitric.proto.document.v1.DocumentQueryStreamRequest.Builder.class);
  }

  public static final int COLLECTION_FIELD_NUMBER = 1;
  private io.nitric.proto.document.v1.Collection collection_;
  /**
   * <pre>
   * The collection to query
   * </pre>
   *
   * <code>.nitric.document.v1.Collection collection = 1;</code>
   * @return Whether the collection field is set.
   */
  @java.lang.Override
  public boolean hasCollection() {
    return collection_ != null;
  }
  /**
   * <pre>
   * The collection to query
   * </pre>
   *
   * <code>.nitric.document.v1.Collection collection = 1;</code>
   * @return The collection.
   */
  @java.lang.Override
  public io.nitric.proto.document.v1.Collection getCollection() {
    return collection_ == null ? io.nitric.proto.document.v1.Collection.getDefaultInstance() : collection_;
  }
  /**
   * <pre>
   * The collection to query
   * </pre>
   *
   * <code>.nitric.document.v1.Collection collection = 1;</code>
   */
  @java.lang.Override
  public io.nitric.proto.document.v1.CollectionOrBuilder getCollectionOrBuilder() {
    return getCollection();
  }

  public static final int EXPRESSIONS_FIELD_NUMBER = 3;
  private java.util.List<io.nitric.proto.document.v1.Expression> expressions_;
  /**
   * <pre>
   * Optional query expressions
   * </pre>
   *
   * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
   */
  @java.lang.Override
  public java.util.List<io.nitric.proto.document.v1.Expression> getExpressionsList() {
    return expressions_;
  }
  /**
   * <pre>
   * Optional query expressions
   * </pre>
   *
   * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.nitric.proto.document.v1.ExpressionOrBuilder>
      getExpressionsOrBuilderList() {
    return expressions_;
  }
  /**
   * <pre>
   * Optional query expressions
   * </pre>
   *
   * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
   */
  @java.lang.Override
  public int getExpressionsCount() {
    return expressions_.size();
  }
  /**
   * <pre>
   * Optional query expressions
   * </pre>
   *
   * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
   */
  @java.lang.Override
  public io.nitric.proto.document.v1.Expression getExpressions(int index) {
    return expressions_.get(index);
  }
  /**
   * <pre>
   * Optional query expressions
   * </pre>
   *
   * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
   */
  @java.lang.Override
  public io.nitric.proto.document.v1.ExpressionOrBuilder getExpressionsOrBuilder(
      int index) {
    return expressions_.get(index);
  }

  public static final int LIMIT_FIELD_NUMBER = 4;
  private int limit_;
  /**
   * <pre>
   * Optional query fetch limit
   * </pre>
   *
   * <code>int32 limit = 4;</code>
   * @return The limit.
   */
  @java.lang.Override
  public int getLimit() {
    return limit_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (collection_ != null) {
      output.writeMessage(1, getCollection());
    }
    for (int i = 0; i < expressions_.size(); i++) {
      output.writeMessage(3, expressions_.get(i));
    }
    if (limit_ != 0) {
      output.writeInt32(4, limit_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (collection_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getCollection());
    }
    for (int i = 0; i < expressions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, expressions_.get(i));
    }
    if (limit_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, limit_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.nitric.proto.document.v1.DocumentQueryStreamRequest)) {
      return super.equals(obj);
    }
    io.nitric.proto.document.v1.DocumentQueryStreamRequest other = (io.nitric.proto.document.v1.DocumentQueryStreamRequest) obj;

    if (hasCollection() != other.hasCollection()) return false;
    if (hasCollection()) {
      if (!getCollection()
          .equals(other.getCollection())) return false;
    }
    if (!getExpressionsList()
        .equals(other.getExpressionsList())) return false;
    if (getLimit()
        != other.getLimit()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasCollection()) {
      hash = (37 * hash) + COLLECTION_FIELD_NUMBER;
      hash = (53 * hash) + getCollection().hashCode();
    }
    if (getExpressionsCount() > 0) {
      hash = (37 * hash) + EXPRESSIONS_FIELD_NUMBER;
      hash = (53 * hash) + getExpressionsList().hashCode();
    }
    hash = (37 * hash) + LIMIT_FIELD_NUMBER;
    hash = (53 * hash) + getLimit();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.nitric.proto.document.v1.DocumentQueryStreamRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.nitric.proto.document.v1.DocumentQueryStreamRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.nitric.proto.document.v1.DocumentQueryStreamRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.nitric.proto.document.v1.DocumentQueryStreamRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.nitric.proto.document.v1.DocumentQueryStreamRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.nitric.proto.document.v1.DocumentQueryStreamRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.nitric.proto.document.v1.DocumentQueryStreamRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.nitric.proto.document.v1.DocumentQueryStreamRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.nitric.proto.document.v1.DocumentQueryStreamRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.nitric.proto.document.v1.DocumentQueryStreamRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.nitric.proto.document.v1.DocumentQueryStreamRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.nitric.proto.document.v1.DocumentQueryStreamRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.nitric.proto.document.v1.DocumentQueryStreamRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code nitric.document.v1.DocumentQueryStreamRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nitric.document.v1.DocumentQueryStreamRequest)
      io.nitric.proto.document.v1.DocumentQueryStreamRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nitric.proto.document.v1.Documents.internal_static_nitric_document_v1_DocumentQueryStreamRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nitric.proto.document.v1.Documents.internal_static_nitric_document_v1_DocumentQueryStreamRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nitric.proto.document.v1.DocumentQueryStreamRequest.class, io.nitric.proto.document.v1.DocumentQueryStreamRequest.Builder.class);
    }

    // Construct using io.nitric.proto.document.v1.DocumentQueryStreamRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getExpressionsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (collectionBuilder_ == null) {
        collection_ = null;
      } else {
        collection_ = null;
        collectionBuilder_ = null;
      }
      if (expressionsBuilder_ == null) {
        expressions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        expressionsBuilder_.clear();
      }
      limit_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.nitric.proto.document.v1.Documents.internal_static_nitric_document_v1_DocumentQueryStreamRequest_descriptor;
    }

    @java.lang.Override
    public io.nitric.proto.document.v1.DocumentQueryStreamRequest getDefaultInstanceForType() {
      return io.nitric.proto.document.v1.DocumentQueryStreamRequest.getDefaultInstance();
    }

    @java.lang.Override
    public io.nitric.proto.document.v1.DocumentQueryStreamRequest build() {
      io.nitric.proto.document.v1.DocumentQueryStreamRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.nitric.proto.document.v1.DocumentQueryStreamRequest buildPartial() {
      io.nitric.proto.document.v1.DocumentQueryStreamRequest result = new io.nitric.proto.document.v1.DocumentQueryStreamRequest(this);
      int from_bitField0_ = bitField0_;
      if (collectionBuilder_ == null) {
        result.collection_ = collection_;
      } else {
        result.collection_ = collectionBuilder_.build();
      }
      if (expressionsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          expressions_ = java.util.Collections.unmodifiableList(expressions_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.expressions_ = expressions_;
      } else {
        result.expressions_ = expressionsBuilder_.build();
      }
      result.limit_ = limit_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.nitric.proto.document.v1.DocumentQueryStreamRequest) {
        return mergeFrom((io.nitric.proto.document.v1.DocumentQueryStreamRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.nitric.proto.document.v1.DocumentQueryStreamRequest other) {
      if (other == io.nitric.proto.document.v1.DocumentQueryStreamRequest.getDefaultInstance()) return this;
      if (other.hasCollection()) {
        mergeCollection(other.getCollection());
      }
      if (expressionsBuilder_ == null) {
        if (!other.expressions_.isEmpty()) {
          if (expressions_.isEmpty()) {
            expressions_ = other.expressions_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureExpressionsIsMutable();
            expressions_.addAll(other.expressions_);
          }
          onChanged();
        }
      } else {
        if (!other.expressions_.isEmpty()) {
          if (expressionsBuilder_.isEmpty()) {
            expressionsBuilder_.dispose();
            expressionsBuilder_ = null;
            expressions_ = other.expressions_;
            bitField0_ = (bitField0_ & ~0x00000001);
            expressionsBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getExpressionsFieldBuilder() : null;
          } else {
            expressionsBuilder_.addAllMessages(other.expressions_);
          }
        }
      }
      if (other.getLimit() != 0) {
        setLimit(other.getLimit());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.nitric.proto.document.v1.DocumentQueryStreamRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.nitric.proto.document.v1.DocumentQueryStreamRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private io.nitric.proto.document.v1.Collection collection_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.nitric.proto.document.v1.Collection, io.nitric.proto.document.v1.Collection.Builder, io.nitric.proto.document.v1.CollectionOrBuilder> collectionBuilder_;
    /**
     * <pre>
     * The collection to query
     * </pre>
     *
     * <code>.nitric.document.v1.Collection collection = 1;</code>
     * @return Whether the collection field is set.
     */
    public boolean hasCollection() {
      return collectionBuilder_ != null || collection_ != null;
    }
    /**
     * <pre>
     * The collection to query
     * </pre>
     *
     * <code>.nitric.document.v1.Collection collection = 1;</code>
     * @return The collection.
     */
    public io.nitric.proto.document.v1.Collection getCollection() {
      if (collectionBuilder_ == null) {
        return collection_ == null ? io.nitric.proto.document.v1.Collection.getDefaultInstance() : collection_;
      } else {
        return collectionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The collection to query
     * </pre>
     *
     * <code>.nitric.document.v1.Collection collection = 1;</code>
     */
    public Builder setCollection(io.nitric.proto.document.v1.Collection value) {
      if (collectionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        collection_ = value;
        onChanged();
      } else {
        collectionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The collection to query
     * </pre>
     *
     * <code>.nitric.document.v1.Collection collection = 1;</code>
     */
    public Builder setCollection(
        io.nitric.proto.document.v1.Collection.Builder builderForValue) {
      if (collectionBuilder_ == null) {
        collection_ = builderForValue.build();
        onChanged();
      } else {
        collectionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The collection to query
     * </pre>
     *
     * <code>.nitric.document.v1.Collection collection = 1;</code>
     */
    public Builder mergeCollection(io.nitric.proto.document.v1.Collection value) {
      if (collectionBuilder_ == null) {
        if (collection_ != null) {
          collection_ =
            io.nitric.proto.document.v1.Collection.newBuilder(collection_).mergeFrom(value).buildPartial();
        } else {
          collection_ = value;
        }
        onChanged();
      } else {
        collectionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The collection to query
     * </pre>
     *
     * <code>.nitric.document.v1.Collection collection = 1;</code>
     */
    public Builder clearCollection() {
      if (collectionBuilder_ == null) {
        collection_ = null;
        onChanged();
      } else {
        collection_ = null;
        collectionBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The collection to query
     * </pre>
     *
     * <code>.nitric.document.v1.Collection collection = 1;</code>
     */
    public io.nitric.proto.document.v1.Collection.Builder getCollectionBuilder() {

      onChanged();
      return getCollectionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The collection to query
     * </pre>
     *
     * <code>.nitric.document.v1.Collection collection = 1;</code>
     */
    public io.nitric.proto.document.v1.CollectionOrBuilder getCollectionOrBuilder() {
      if (collectionBuilder_ != null) {
        return collectionBuilder_.getMessageOrBuilder();
      } else {
        return collection_ == null ?
            io.nitric.proto.document.v1.Collection.getDefaultInstance() : collection_;
      }
    }
    /**
     * <pre>
     * The collection to query
     * </pre>
     *
     * <code>.nitric.document.v1.Collection collection = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.nitric.proto.document.v1.Collection, io.nitric.proto.document.v1.Collection.Builder, io.nitric.proto.document.v1.CollectionOrBuilder>
        getCollectionFieldBuilder() {
      if (collectionBuilder_ == null) {
        collectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.nitric.proto.document.v1.Collection, io.nitric.proto.document.v1.Collection.Builder, io.nitric.proto.document.v1.CollectionOrBuilder>(
                getCollection(),
                getParentForChildren(),
                isClean());
        collection_ = null;
      }
      return collectionBuilder_;
    }

    private java.util.List<io.nitric.proto.document.v1.Expression> expressions_ =
      java.util.Collections.emptyList();
    private void ensureExpressionsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        expressions_ = new java.util.ArrayList<io.nitric.proto.document.v1.Expression>(expressions_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.nitric.proto.document.v1.Expression, io.nitric.proto.document.v1.Expression.Builder, io.nitric.proto.document.v1.ExpressionOrBuilder> expressionsBuilder_;

    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public java.util.List<io.nitric.proto.document.v1.Expression> getExpressionsList() {
      if (expressionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(expressions_);
      } else {
        return expressionsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public int getExpressionsCount() {
      if (expressionsBuilder_ == null) {
        return expressions_.size();
      } else {
        return expressionsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public io.nitric.proto.document.v1.Expression getExpressions(int index) {
      if (expressionsBuilder_ == null) {
        return expressions_.get(index);
      } else {
        return expressionsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public Builder setExpressions(
        int index, io.nitric.proto.document.v1.Expression value) {
      if (expressionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExpressionsIsMutable();
        expressions_.set(index, value);
        onChanged();
      } else {
        expressionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public Builder setExpressions(
        int index, io.nitric.proto.document.v1.Expression.Builder builderForValue) {
      if (expressionsBuilder_ == null) {
        ensureExpressionsIsMutable();
        expressions_.set(index, builderForValue.build());
        onChanged();
      } else {
        expressionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public Builder addExpressions(io.nitric.proto.document.v1.Expression value) {
      if (expressionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExpressionsIsMutable();
        expressions_.add(value);
        onChanged();
      } else {
        expressionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public Builder addExpressions(
        int index, io.nitric.proto.document.v1.Expression value) {
      if (expressionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExpressionsIsMutable();
        expressions_.add(index, value);
        onChanged();
      } else {
        expressionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public Builder addExpressions(
        io.nitric.proto.document.v1.Expression.Builder builderForValue) {
      if (expressionsBuilder_ == null) {
        ensureExpressionsIsMutable();
        expressions_.add(builderForValue.build());
        onChanged();
      } else {
        expressionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public Builder addExpressions(
        int index, io.nitric.proto.document.v1.Expression.Builder builderForValue) {
      if (expressionsBuilder_ == null) {
        ensureExpressionsIsMutable();
        expressions_.add(index, builderForValue.build());
        onChanged();
      } else {
        expressionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public Builder addAllExpressions(
        java.lang.Iterable<? extends io.nitric.proto.document.v1.Expression> values) {
      if (expressionsBuilder_ == null) {
        ensureExpressionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, expressions_);
        onChanged();
      } else {
        expressionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public Builder clearExpressions() {
      if (expressionsBuilder_ == null) {
        expressions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        expressionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public Builder removeExpressions(int index) {
      if (expressionsBuilder_ == null) {
        ensureExpressionsIsMutable();
        expressions_.remove(index);
        onChanged();
      } else {
        expressionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public io.nitric.proto.document.v1.Expression.Builder getExpressionsBuilder(
        int index) {
      return getExpressionsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public io.nitric.proto.document.v1.ExpressionOrBuilder getExpressionsOrBuilder(
        int index) {
      if (expressionsBuilder_ == null) {
        return expressions_.get(index);  } else {
        return expressionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public java.util.List<? extends io.nitric.proto.document.v1.ExpressionOrBuilder>
         getExpressionsOrBuilderList() {
      if (expressionsBuilder_ != null) {
        return expressionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(expressions_);
      }
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public io.nitric.proto.document.v1.Expression.Builder addExpressionsBuilder() {
      return getExpressionsFieldBuilder().addBuilder(
          io.nitric.proto.document.v1.Expression.getDefaultInstance());
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public io.nitric.proto.document.v1.Expression.Builder addExpressionsBuilder(
        int index) {
      return getExpressionsFieldBuilder().addBuilder(
          index, io.nitric.proto.document.v1.Expression.getDefaultInstance());
    }
    /**
     * <pre>
     * Optional query expressions
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    public java.util.List<io.nitric.proto.document.v1.Expression.Builder>
         getExpressionsBuilderList() {
      return getExpressionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.nitric.proto.document.v1.Expression, io.nitric.proto.document.v1.Expression.Builder, io.nitric.proto.document.v1.ExpressionOrBuilder>
        getExpressionsFieldBuilder() {
      if (expressionsBuilder_ == null) {
        expressionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.nitric.proto.document.v1.Expression, io.nitric.proto.document.v1.Expression.Builder, io.nitric.proto.document.v1.ExpressionOrBuilder>(
                expressions_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        expressions_ = null;
      }
      return expressionsBuilder_;
    }

    private int limit_ ;
    /**
     * <pre>
     * Optional query fetch limit
     * </pre>
     *
     * <code>int32 limit = 4;</code>
     * @return The limit.
     */
    @java.lang.Override
    public int getLimit() {
      return limit_;
    }
    /**
     * <pre>
     * Optional query fetch limit
     * </pre>
     *
     * <code>int32 limit = 4;</code>
     * @param value The limit to set.
     * @return This builder for chaining.
     */
    public Builder setLimit(int value) {

      limit_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional query fetch limit
     * </pre>
     *
     * <code>int32 limit = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearLimit() {

      limit_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:nitric.document.v1.DocumentQueryStreamRequest)
  }

  // @@protoc_insertion_point(class_scope:nitric.document.v1.DocumentQueryStreamRequest)
  private static final io.nitric.proto.document.v1.DocumentQueryStreamRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.nitric.proto.document.v1.DocumentQueryStreamRequest();
  }

  public static io.nitric.proto.document.v1.DocumentQueryStreamRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DocumentQueryStreamRequest>
      PARSER = new com.google.protobuf.AbstractParser<DocumentQueryStreamRequest>() {
    @java.lang.Override
    public DocumentQueryStreamRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DocumentQueryStreamRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DocumentQueryStreamRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DocumentQueryStreamRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.nitric.proto.document.v1.DocumentQueryStreamRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: faas/v1/faas.proto

package io.nitric.proto.faas.v1;

/**
 * <pre>
 * The server has a trigger for the client to handle
 * </pre>
 *
 * Protobuf type {@code nitric.faas.v1.TriggerRequest}
 */
public final class TriggerRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:nitric.faas.v1.TriggerRequest)
    TriggerRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TriggerRequest.newBuilder() to construct.
  private TriggerRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TriggerRequest() {
    data_ = com.google.protobuf.ByteString.EMPTY;
    mimeType_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TriggerRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TriggerRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {

            data_ = input.readBytes();
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            mimeType_ = s;
            break;
          }
          case 26: {
            io.nitric.proto.faas.v1.HttpTriggerContext.Builder subBuilder = null;
            if (contextCase_ == 3) {
              subBuilder = ((io.nitric.proto.faas.v1.HttpTriggerContext) context_).toBuilder();
            }
            context_ =
                input.readMessage(io.nitric.proto.faas.v1.HttpTriggerContext.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.nitric.proto.faas.v1.HttpTriggerContext) context_);
              context_ = subBuilder.buildPartial();
            }
            contextCase_ = 3;
            break;
          }
          case 34: {
            io.nitric.proto.faas.v1.TopicTriggerContext.Builder subBuilder = null;
            if (contextCase_ == 4) {
              subBuilder = ((io.nitric.proto.faas.v1.TopicTriggerContext) context_).toBuilder();
            }
            context_ =
                input.readMessage(io.nitric.proto.faas.v1.TopicTriggerContext.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.nitric.proto.faas.v1.TopicTriggerContext) context_);
              context_ = subBuilder.buildPartial();
            }
            contextCase_ = 4;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.nitric.proto.faas.v1.NitricFaas.internal_static_nitric_faas_v1_TriggerRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.nitric.proto.faas.v1.NitricFaas.internal_static_nitric_faas_v1_TriggerRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.nitric.proto.faas.v1.TriggerRequest.class, io.nitric.proto.faas.v1.TriggerRequest.Builder.class);
  }

  private int contextCase_ = 0;
  private java.lang.Object context_;
  public enum ContextCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    HTTP(3),
    TOPIC(4),
    CONTEXT_NOT_SET(0);
    private final int value;
    private ContextCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ContextCase valueOf(int value) {
      return forNumber(value);
    }

    public static ContextCase forNumber(int value) {
      switch (value) {
        case 3: return HTTP;
        case 4: return TOPIC;
        case 0: return CONTEXT_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ContextCase
  getContextCase() {
    return ContextCase.forNumber(
        contextCase_);
  }

  public static final int DATA_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString data_;
  /**
   * <pre>
   * The data in the trigger
   * </pre>
   *
   * <code>bytes data = 1;</code>
   * @return The data.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getData() {
    return data_;
  }

  public static final int MIME_TYPE_FIELD_NUMBER = 2;
  private volatile java.lang.Object mimeType_;
  /**
   * <pre>
   * Should we supply a mime type for the data?
   * Or rely on context?
   * </pre>
   *
   * <code>string mime_type = 2;</code>
   * @return The mimeType.
   */
  @java.lang.Override
  public java.lang.String getMimeType() {
    java.lang.Object ref = mimeType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      mimeType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Should we supply a mime type for the data?
   * Or rely on context?
   * </pre>
   *
   * <code>string mime_type = 2;</code>
   * @return The bytes for mimeType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMimeTypeBytes() {
    java.lang.Object ref = mimeType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      mimeType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HTTP_FIELD_NUMBER = 3;
  /**
   * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
   * @return Whether the http field is set.
   */
  @java.lang.Override
  public boolean hasHttp() {
    return contextCase_ == 3;
  }
  /**
   * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
   * @return The http.
   */
  @java.lang.Override
  public io.nitric.proto.faas.v1.HttpTriggerContext getHttp() {
    if (contextCase_ == 3) {
       return (io.nitric.proto.faas.v1.HttpTriggerContext) context_;
    }
    return io.nitric.proto.faas.v1.HttpTriggerContext.getDefaultInstance();
  }
  /**
   * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
   */
  @java.lang.Override
  public io.nitric.proto.faas.v1.HttpTriggerContextOrBuilder getHttpOrBuilder() {
    if (contextCase_ == 3) {
       return (io.nitric.proto.faas.v1.HttpTriggerContext) context_;
    }
    return io.nitric.proto.faas.v1.HttpTriggerContext.getDefaultInstance();
  }

  public static final int TOPIC_FIELD_NUMBER = 4;
  /**
   * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
   * @return Whether the topic field is set.
   */
  @java.lang.Override
  public boolean hasTopic() {
    return contextCase_ == 4;
  }
  /**
   * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
   * @return The topic.
   */
  @java.lang.Override
  public io.nitric.proto.faas.v1.TopicTriggerContext getTopic() {
    if (contextCase_ == 4) {
       return (io.nitric.proto.faas.v1.TopicTriggerContext) context_;
    }
    return io.nitric.proto.faas.v1.TopicTriggerContext.getDefaultInstance();
  }
  /**
   * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
   */
  @java.lang.Override
  public io.nitric.proto.faas.v1.TopicTriggerContextOrBuilder getTopicOrBuilder() {
    if (contextCase_ == 4) {
       return (io.nitric.proto.faas.v1.TopicTriggerContext) context_;
    }
    return io.nitric.proto.faas.v1.TopicTriggerContext.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!data_.isEmpty()) {
      output.writeBytes(1, data_);
    }
    if (!getMimeTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, mimeType_);
    }
    if (contextCase_ == 3) {
      output.writeMessage(3, (io.nitric.proto.faas.v1.HttpTriggerContext) context_);
    }
    if (contextCase_ == 4) {
      output.writeMessage(4, (io.nitric.proto.faas.v1.TopicTriggerContext) context_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!data_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, data_);
    }
    if (!getMimeTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, mimeType_);
    }
    if (contextCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (io.nitric.proto.faas.v1.HttpTriggerContext) context_);
    }
    if (contextCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (io.nitric.proto.faas.v1.TopicTriggerContext) context_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.nitric.proto.faas.v1.TriggerRequest)) {
      return super.equals(obj);
    }
    io.nitric.proto.faas.v1.TriggerRequest other = (io.nitric.proto.faas.v1.TriggerRequest) obj;

    if (!getData()
        .equals(other.getData())) return false;
    if (!getMimeType()
        .equals(other.getMimeType())) return false;
    if (!getContextCase().equals(other.getContextCase())) return false;
    switch (contextCase_) {
      case 3:
        if (!getHttp()
            .equals(other.getHttp())) return false;
        break;
      case 4:
        if (!getTopic()
            .equals(other.getTopic())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DATA_FIELD_NUMBER;
    hash = (53 * hash) + getData().hashCode();
    hash = (37 * hash) + MIME_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getMimeType().hashCode();
    switch (contextCase_) {
      case 3:
        hash = (37 * hash) + HTTP_FIELD_NUMBER;
        hash = (53 * hash) + getHttp().hashCode();
        break;
      case 4:
        hash = (37 * hash) + TOPIC_FIELD_NUMBER;
        hash = (53 * hash) + getTopic().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.nitric.proto.faas.v1.TriggerRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.nitric.proto.faas.v1.TriggerRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.nitric.proto.faas.v1.TriggerRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.nitric.proto.faas.v1.TriggerRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.nitric.proto.faas.v1.TriggerRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.nitric.proto.faas.v1.TriggerRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.nitric.proto.faas.v1.TriggerRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.nitric.proto.faas.v1.TriggerRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.nitric.proto.faas.v1.TriggerRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.nitric.proto.faas.v1.TriggerRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.nitric.proto.faas.v1.TriggerRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.nitric.proto.faas.v1.TriggerRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.nitric.proto.faas.v1.TriggerRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The server has a trigger for the client to handle
   * </pre>
   *
   * Protobuf type {@code nitric.faas.v1.TriggerRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nitric.faas.v1.TriggerRequest)
      io.nitric.proto.faas.v1.TriggerRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nitric.proto.faas.v1.NitricFaas.internal_static_nitric_faas_v1_TriggerRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nitric.proto.faas.v1.NitricFaas.internal_static_nitric_faas_v1_TriggerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nitric.proto.faas.v1.TriggerRequest.class, io.nitric.proto.faas.v1.TriggerRequest.Builder.class);
    }

    // Construct using io.nitric.proto.faas.v1.TriggerRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      data_ = com.google.protobuf.ByteString.EMPTY;

      mimeType_ = "";

      contextCase_ = 0;
      context_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.nitric.proto.faas.v1.NitricFaas.internal_static_nitric_faas_v1_TriggerRequest_descriptor;
    }

    @java.lang.Override
    public io.nitric.proto.faas.v1.TriggerRequest getDefaultInstanceForType() {
      return io.nitric.proto.faas.v1.TriggerRequest.getDefaultInstance();
    }

    @java.lang.Override
    public io.nitric.proto.faas.v1.TriggerRequest build() {
      io.nitric.proto.faas.v1.TriggerRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.nitric.proto.faas.v1.TriggerRequest buildPartial() {
      io.nitric.proto.faas.v1.TriggerRequest result = new io.nitric.proto.faas.v1.TriggerRequest(this);
      result.data_ = data_;
      result.mimeType_ = mimeType_;
      if (contextCase_ == 3) {
        if (httpBuilder_ == null) {
          result.context_ = context_;
        } else {
          result.context_ = httpBuilder_.build();
        }
      }
      if (contextCase_ == 4) {
        if (topicBuilder_ == null) {
          result.context_ = context_;
        } else {
          result.context_ = topicBuilder_.build();
        }
      }
      result.contextCase_ = contextCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.nitric.proto.faas.v1.TriggerRequest) {
        return mergeFrom((io.nitric.proto.faas.v1.TriggerRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.nitric.proto.faas.v1.TriggerRequest other) {
      if (other == io.nitric.proto.faas.v1.TriggerRequest.getDefaultInstance()) return this;
      if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
        setData(other.getData());
      }
      if (!other.getMimeType().isEmpty()) {
        mimeType_ = other.mimeType_;
        onChanged();
      }
      switch (other.getContextCase()) {
        case HTTP: {
          mergeHttp(other.getHttp());
          break;
        }
        case TOPIC: {
          mergeTopic(other.getTopic());
          break;
        }
        case CONTEXT_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.nitric.proto.faas.v1.TriggerRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.nitric.proto.faas.v1.TriggerRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int contextCase_ = 0;
    private java.lang.Object context_;
    public ContextCase
        getContextCase() {
      return ContextCase.forNumber(
          contextCase_);
    }

    public Builder clearContext() {
      contextCase_ = 0;
      context_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * The data in the trigger
     * </pre>
     *
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <pre>
     * The data in the trigger
     * </pre>
     *
     * <code>bytes data = 1;</code>
     * @param value The data to set.
     * @return This builder for chaining.
     */
    public Builder setData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }

      data_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The data in the trigger
     * </pre>
     *
     * <code>bytes data = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearData() {

      data_ = getDefaultInstance().getData();
      onChanged();
      return this;
    }

    private java.lang.Object mimeType_ = "";
    /**
     * <pre>
     * Should we supply a mime type for the data?
     * Or rely on context?
     * </pre>
     *
     * <code>string mime_type = 2;</code>
     * @return The mimeType.
     */
    public java.lang.String getMimeType() {
      java.lang.Object ref = mimeType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        mimeType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Should we supply a mime type for the data?
     * Or rely on context?
     * </pre>
     *
     * <code>string mime_type = 2;</code>
     * @return The bytes for mimeType.
     */
    public com.google.protobuf.ByteString
        getMimeTypeBytes() {
      java.lang.Object ref = mimeType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mimeType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Should we supply a mime type for the data?
     * Or rely on context?
     * </pre>
     *
     * <code>string mime_type = 2;</code>
     * @param value The mimeType to set.
     * @return This builder for chaining.
     */
    public Builder setMimeType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      mimeType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Should we supply a mime type for the data?
     * Or rely on context?
     * </pre>
     *
     * <code>string mime_type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMimeType() {

      mimeType_ = getDefaultInstance().getMimeType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Should we supply a mime type for the data?
     * Or rely on context?
     * </pre>
     *
     * <code>string mime_type = 2;</code>
     * @param value The bytes for mimeType to set.
     * @return This builder for chaining.
     */
    public Builder setMimeTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      mimeType_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.nitric.proto.faas.v1.HttpTriggerContext, io.nitric.proto.faas.v1.HttpTriggerContext.Builder, io.nitric.proto.faas.v1.HttpTriggerContextOrBuilder> httpBuilder_;
    /**
     * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
     * @return Whether the http field is set.
     */
    @java.lang.Override
    public boolean hasHttp() {
      return contextCase_ == 3;
    }
    /**
     * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
     * @return The http.
     */
    @java.lang.Override
    public io.nitric.proto.faas.v1.HttpTriggerContext getHttp() {
      if (httpBuilder_ == null) {
        if (contextCase_ == 3) {
          return (io.nitric.proto.faas.v1.HttpTriggerContext) context_;
        }
        return io.nitric.proto.faas.v1.HttpTriggerContext.getDefaultInstance();
      } else {
        if (contextCase_ == 3) {
          return httpBuilder_.getMessage();
        }
        return io.nitric.proto.faas.v1.HttpTriggerContext.getDefaultInstance();
      }
    }
    /**
     * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
     */
    public Builder setHttp(io.nitric.proto.faas.v1.HttpTriggerContext value) {
      if (httpBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        context_ = value;
        onChanged();
      } else {
        httpBuilder_.setMessage(value);
      }
      contextCase_ = 3;
      return this;
    }
    /**
     * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
     */
    public Builder setHttp(
        io.nitric.proto.faas.v1.HttpTriggerContext.Builder builderForValue) {
      if (httpBuilder_ == null) {
        context_ = builderForValue.build();
        onChanged();
      } else {
        httpBuilder_.setMessage(builderForValue.build());
      }
      contextCase_ = 3;
      return this;
    }
    /**
     * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
     */
    public Builder mergeHttp(io.nitric.proto.faas.v1.HttpTriggerContext value) {
      if (httpBuilder_ == null) {
        if (contextCase_ == 3 &&
            context_ != io.nitric.proto.faas.v1.HttpTriggerContext.getDefaultInstance()) {
          context_ = io.nitric.proto.faas.v1.HttpTriggerContext.newBuilder((io.nitric.proto.faas.v1.HttpTriggerContext) context_)
              .mergeFrom(value).buildPartial();
        } else {
          context_ = value;
        }
        onChanged();
      } else {
        if (contextCase_ == 3) {
          httpBuilder_.mergeFrom(value);
        }
        httpBuilder_.setMessage(value);
      }
      contextCase_ = 3;
      return this;
    }
    /**
     * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
     */
    public Builder clearHttp() {
      if (httpBuilder_ == null) {
        if (contextCase_ == 3) {
          contextCase_ = 0;
          context_ = null;
          onChanged();
        }
      } else {
        if (contextCase_ == 3) {
          contextCase_ = 0;
          context_ = null;
        }
        httpBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
     */
    public io.nitric.proto.faas.v1.HttpTriggerContext.Builder getHttpBuilder() {
      return getHttpFieldBuilder().getBuilder();
    }
    /**
     * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
     */
    @java.lang.Override
    public io.nitric.proto.faas.v1.HttpTriggerContextOrBuilder getHttpOrBuilder() {
      if ((contextCase_ == 3) && (httpBuilder_ != null)) {
        return httpBuilder_.getMessageOrBuilder();
      } else {
        if (contextCase_ == 3) {
          return (io.nitric.proto.faas.v1.HttpTriggerContext) context_;
        }
        return io.nitric.proto.faas.v1.HttpTriggerContext.getDefaultInstance();
      }
    }
    /**
     * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.nitric.proto.faas.v1.HttpTriggerContext, io.nitric.proto.faas.v1.HttpTriggerContext.Builder, io.nitric.proto.faas.v1.HttpTriggerContextOrBuilder>
        getHttpFieldBuilder() {
      if (httpBuilder_ == null) {
        if (!(contextCase_ == 3)) {
          context_ = io.nitric.proto.faas.v1.HttpTriggerContext.getDefaultInstance();
        }
        httpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.nitric.proto.faas.v1.HttpTriggerContext, io.nitric.proto.faas.v1.HttpTriggerContext.Builder, io.nitric.proto.faas.v1.HttpTriggerContextOrBuilder>(
                (io.nitric.proto.faas.v1.HttpTriggerContext) context_,
                getParentForChildren(),
                isClean());
        context_ = null;
      }
      contextCase_ = 3;
      onChanged();;
      return httpBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.nitric.proto.faas.v1.TopicTriggerContext, io.nitric.proto.faas.v1.TopicTriggerContext.Builder, io.nitric.proto.faas.v1.TopicTriggerContextOrBuilder> topicBuilder_;
    /**
     * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
     * @return Whether the topic field is set.
     */
    @java.lang.Override
    public boolean hasTopic() {
      return contextCase_ == 4;
    }
    /**
     * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
     * @return The topic.
     */
    @java.lang.Override
    public io.nitric.proto.faas.v1.TopicTriggerContext getTopic() {
      if (topicBuilder_ == null) {
        if (contextCase_ == 4) {
          return (io.nitric.proto.faas.v1.TopicTriggerContext) context_;
        }
        return io.nitric.proto.faas.v1.TopicTriggerContext.getDefaultInstance();
      } else {
        if (contextCase_ == 4) {
          return topicBuilder_.getMessage();
        }
        return io.nitric.proto.faas.v1.TopicTriggerContext.getDefaultInstance();
      }
    }
    /**
     * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
     */
    public Builder setTopic(io.nitric.proto.faas.v1.TopicTriggerContext value) {
      if (topicBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        context_ = value;
        onChanged();
      } else {
        topicBuilder_.setMessage(value);
      }
      contextCase_ = 4;
      return this;
    }
    /**
     * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
     */
    public Builder setTopic(
        io.nitric.proto.faas.v1.TopicTriggerContext.Builder builderForValue) {
      if (topicBuilder_ == null) {
        context_ = builderForValue.build();
        onChanged();
      } else {
        topicBuilder_.setMessage(builderForValue.build());
      }
      contextCase_ = 4;
      return this;
    }
    /**
     * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
     */
    public Builder mergeTopic(io.nitric.proto.faas.v1.TopicTriggerContext value) {
      if (topicBuilder_ == null) {
        if (contextCase_ == 4 &&
            context_ != io.nitric.proto.faas.v1.TopicTriggerContext.getDefaultInstance()) {
          context_ = io.nitric.proto.faas.v1.TopicTriggerContext.newBuilder((io.nitric.proto.faas.v1.TopicTriggerContext) context_)
              .mergeFrom(value).buildPartial();
        } else {
          context_ = value;
        }
        onChanged();
      } else {
        if (contextCase_ == 4) {
          topicBuilder_.mergeFrom(value);
        }
        topicBuilder_.setMessage(value);
      }
      contextCase_ = 4;
      return this;
    }
    /**
     * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
     */
    public Builder clearTopic() {
      if (topicBuilder_ == null) {
        if (contextCase_ == 4) {
          contextCase_ = 0;
          context_ = null;
          onChanged();
        }
      } else {
        if (contextCase_ == 4) {
          contextCase_ = 0;
          context_ = null;
        }
        topicBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
     */
    public io.nitric.proto.faas.v1.TopicTriggerContext.Builder getTopicBuilder() {
      return getTopicFieldBuilder().getBuilder();
    }
    /**
     * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
     */
    @java.lang.Override
    public io.nitric.proto.faas.v1.TopicTriggerContextOrBuilder getTopicOrBuilder() {
      if ((contextCase_ == 4) && (topicBuilder_ != null)) {
        return topicBuilder_.getMessageOrBuilder();
      } else {
        if (contextCase_ == 4) {
          return (io.nitric.proto.faas.v1.TopicTriggerContext) context_;
        }
        return io.nitric.proto.faas.v1.TopicTriggerContext.getDefaultInstance();
      }
    }
    /**
     * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.nitric.proto.faas.v1.TopicTriggerContext, io.nitric.proto.faas.v1.TopicTriggerContext.Builder, io.nitric.proto.faas.v1.TopicTriggerContextOrBuilder>
        getTopicFieldBuilder() {
      if (topicBuilder_ == null) {
        if (!(contextCase_ == 4)) {
          context_ = io.nitric.proto.faas.v1.TopicTriggerContext.getDefaultInstance();
        }
        topicBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.nitric.proto.faas.v1.TopicTriggerContext, io.nitric.proto.faas.v1.TopicTriggerContext.Builder, io.nitric.proto.faas.v1.TopicTriggerContextOrBuilder>(
                (io.nitric.proto.faas.v1.TopicTriggerContext) context_,
                getParentForChildren(),
                isClean());
        context_ = null;
      }
      contextCase_ = 4;
      onChanged();;
      return topicBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:nitric.faas.v1.TriggerRequest)
  }

  // @@protoc_insertion_point(class_scope:nitric.faas.v1.TriggerRequest)
  private static final io.nitric.proto.faas.v1.TriggerRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.nitric.proto.faas.v1.TriggerRequest();
  }

  public static io.nitric.proto.faas.v1.TriggerRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TriggerRequest>
      PARSER = new com.google.protobuf.AbstractParser<TriggerRequest>() {
    @java.lang.Override
    public TriggerRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TriggerRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TriggerRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TriggerRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.nitric.proto.faas.v1.TriggerRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


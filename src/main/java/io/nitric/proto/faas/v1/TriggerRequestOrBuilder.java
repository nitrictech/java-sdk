// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: faas/v1/faas.proto

package io.nitric.proto.faas.v1;

public interface TriggerRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:nitric.faas.v1.TriggerRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The data in the trigger
   * </pre>
   *
   * <code>bytes data = 1;</code>
   * @return The data.
   */
  com.google.protobuf.ByteString getData();

  /**
   * <pre>
   * Should we supply a mime type for the data?
   * Or rely on context?
   * </pre>
   *
   * <code>string mime_type = 2;</code>
   * @return The mimeType.
   */
  java.lang.String getMimeType();
  /**
   * <pre>
   * Should we supply a mime type for the data?
   * Or rely on context?
   * </pre>
   *
   * <code>string mime_type = 2;</code>
   * @return The bytes for mimeType.
   */
  com.google.protobuf.ByteString
      getMimeTypeBytes();

  /**
   * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
   * @return Whether the http field is set.
   */
  boolean hasHttp();
  /**
   * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
   * @return The http.
   */
  io.nitric.proto.faas.v1.HttpTriggerContext getHttp();
  /**
   * <code>.nitric.faas.v1.HttpTriggerContext http = 3;</code>
   */
  io.nitric.proto.faas.v1.HttpTriggerContextOrBuilder getHttpOrBuilder();

  /**
   * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
   * @return Whether the topic field is set.
   */
  boolean hasTopic();
  /**
   * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
   * @return The topic.
   */
  io.nitric.proto.faas.v1.TopicTriggerContext getTopic();
  /**
   * <code>.nitric.faas.v1.TopicTriggerContext topic = 4;</code>
   */
  io.nitric.proto.faas.v1.TopicTriggerContextOrBuilder getTopicOrBuilder();

  public io.nitric.proto.faas.v1.TriggerRequest.ContextCase getContextCase();
}

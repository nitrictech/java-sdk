syntax = "proto3";
package nitric.storage.v1;

import "validate/validate.proto";

// protoc plugin options for code generation
option go_package = "nitric/v1;v1";
option java_package = "io.nitric.proto.storage.v1";
option java_multiple_files = true;
option java_outer_classname = "Storages";
option php_namespace = "Nitric\\Proto\\Storage\\V1";
option csharp_namespace = "Nitric.Proto.Storage.v1";

// Services for storage and retrieval of files in the form of byte arrays, such as text and binary files.
service StorageService {
  // Retrieve an item from a bucket
  rpc Read (StorageReadRequest) returns (StorageReadResponse);
  // Store an item to a bucket
  rpc Write (StorageWriteRequest) returns (StorageWriteResponse);
  // Delete an item from a bucket
  rpc Delete (StorageDeleteRequest) returns (StorageDeleteResponse);
}

// Request to put (create/update) a storage item
message StorageWriteRequest {
  // Nitric name of the bucket to store in
  //  this will be automatically resolved to the provider specific bucket identifier.
  string bucket_name = 1 [(validate.rules).string = {
    pattern:   "^\\w+([.\\-]\\w+)*$",
    max_bytes: 256,
  }];
  // Key to store the item under
  string key = 2;
  // bytes array to store
  bytes body = 3;
}

// Result of putting a storage item
message StorageWriteResponse {}

// Request to retrieve a storage item
message StorageReadRequest {
  // Nitric name of the bucket to retrieve from
  //  this will be automatically resolved to the provider specific bucket identifier.
  string bucket_name = 1 [(validate.rules).string = {
    pattern:   "^\\w+([.\\-]\\w+)*$",
    max_bytes: 256,
  }];
  // Key of item to retrieve
  string key = 2;
}

// Returned storage item
message StorageReadResponse {
  // The body bytes of the retrieved storage item
  bytes body = 1;
}

// Request to delete a storage item
message StorageDeleteRequest {
  // Name of the bucket to delete from
  string bucket_name = 1 [(validate.rules).string = {
    pattern:   "^\\w+([.\\-]\\w+)*$",
    max_bytes: 256,
  }];
  // Key of item to delete
  string key = 2;
}

// Result of deleting a storage item
message StorageDeleteResponse {}